#include <bits/stdc++.h>
using namespace std;
int prec[] = {
    108283, 98049, 94768, 92892, 91282, 90228, 89268, 88547, 88046, 87416,
    86839,  86284, 86190, 85596, 85236, 85014, 84683, 84202, 84039, 83808,
    83536,  83520, 83293, 82970, 82845, 82648, 82389, 82480, 81978, 82064,
    81791,  81725, 81452, 81341, 81306, 81074, 81193, 80842, 80660, 80698,
    80498,  80553, 80557, 80303, 80207, 79866, 80000, 79991, 79913, 79621,
    79310,  79550, 79396, 79352, 79413, 79097, 79193, 79196, 78996, 79207,
    78638,  78899, 78732, 78446, 78766, 78316, 78497, 78598, 78283, 78219,
    78431,  78325, 78008, 78038, 78243, 77816, 77789, 77846, 77934, 77741,
    77663,  77772, 77497, 77403, 77634, 77515, 77585, 77508, 77414, 77253,
    77135,  77349, 77034, 77112, 77044, 76977, 77078, 76891, 76905, 76690};
int l, r;
bool ip[1000000];
int doit(int a, int b) {
  int cnt = 0;
  if (a > b) return 0;
  int base = a - a % 3000000;
  for (int i = 0; i < 1000000; i++) ip[i] = 1;
  for (int i = 3; i * i <= b; i += 2) {
    for (int j = i * i; j <= b; j += i * 2)
      if (j >= a && j % 4 == 1) {
        ip[(j - base) / 4] = 0;
      }
  }
  for (int i = a; i <= b; i++)
    if (i % 4 == 1 && ip[(i - base) / 4]) {
      cnt++;
    }
  return cnt;
}
int main() {
  scanf("%d%d", &l, &r);
  int ret = 0;
  for (int i = 0; i < 100; i++) {
    if (i * 3000000 + 1 >= l && (i + 1) * 3000000 <= r)
      ret += prec[i];
    else {
      ret += doit(max(i * 3000000 + 1, l), min((i + 1) * 3000000, r));
    }
  }
  if (l <= 2 && r >= 2) ret++;
  if (l >= 1) ret--;
  printf("%d\n", ret);
}
