#include <bits/stdc++.h>
using namespace std;
char s[1000007];
int mi, n, m, a[1000007][20], f[3][1000007];
void work(int y) {
  if (f[1][1] == 1)
    a[2][2]++, a[2][3]++, a[2][4]++, a[2][5]++;
  else
    a[2][1]++, a[2][6]++, a[2][7]++, a[2][8]++;
  if (f[1][2] == 1)
    a[2][1]++, a[2][3]++, a[2][4]++, a[2][6]++;
  else
    a[2][2]++, a[2][5]++, a[2][7]++, a[2][8]++;
  if (f[2][1] == 1)
    a[2][1]++, a[2][2]++, a[2][4]++, a[2][7]++;
  else
    a[2][3]++, a[2][5]++, a[2][6]++, a[2][8]++;
  if (f[2][2] == 1)
    a[2][1]++, a[2][2]++, a[2][3]++, a[2][8]++;
  else
    a[2][4]++, a[2][5]++, a[2][6]++, a[2][7]++;
  for (int i = 3; i <= y; i++) {
    a[i][1] = min(a[i - 1][2], a[i - 1][8]);
    a[i][2] = min(a[i - 1][1], a[i - 1][3]);
    a[i][3] = min(a[i - 1][4], a[i - 1][6]);
    a[i][4] = min(a[i - 1][1], a[i - 1][3]);
    a[i][5] = min(a[i - 1][4], a[i - 1][6]);
    a[i][6] = min(a[i - 1][5], a[i - 1][7]);
    a[i][7] = min(a[i - 1][2], a[i - 1][8]);
    a[i][8] = min(a[i - 1][5], a[i - 1][7]);
    if (f[1][i] == 0)
      a[i][2]++, a[i][5]++, a[i][7]++, a[i][8]++;
    else
      a[i][1]++, a[i][3]++, a[i][4]++, a[i][6]++;
    if (f[2][i] == 0)
      a[i][4]++, a[i][5]++, a[i][7]++, a[i][6]++;
    else
      a[i][1]++, a[i][2]++, a[i][3]++, a[i][8]++;
  }
  mi = 0xffffff;
  for (int i = 1; i <= 8; i++) mi = min(mi, a[y][i]);
  printf("%d\n", mi);
}
void work1(int y) {
  if (f[1][1] == 1)
    a[2][2]++, a[2][4]++, a[2][6]++, a[2][8]++, a[2][13]++, a[2][14]++,
        a[2][15]++, a[2][16]++;
  else
    a[2][1]++, a[2][3]++, a[2][5]++, a[2][7]++, a[2][9]++, a[2][10]++,
        a[2][11]++, a[2][12]++;
  if (f[1][2] == 1)
    a[2][1]++, a[2][3]++, a[2][5]++, a[2][7]++, a[2][13]++, a[2][14]++,
        a[2][15]++, a[2][16]++;
  else
    a[2][2]++, a[2][4]++, a[2][6]++, a[2][8]++, a[2][9]++, a[2][10]++,
        a[2][11]++, a[2][12]++;
  if (f[2][1] == 1)
    a[2][1]++, a[2][2]++, a[2][3]++, a[2][4]++, a[2][11]++, a[2][12]++,
        a[2][15]++, a[2][16]++;
  else
    a[2][5]++, a[2][6]++, a[2][7]++, a[2][8]++, a[2][9]++, a[2][10]++,
        a[2][13]++, a[2][14]++;
  if (f[2][2] == 1)
    a[2][1]++, a[2][2]++, a[2][3]++, a[2][4]++, a[2][9]++, a[2][10]++,
        a[2][13]++, a[2][14]++;
  else
    a[2][5]++, a[2][6]++, a[2][7]++, a[2][8]++, a[2][11]++, a[2][12]++,
        a[2][15]++, a[2][16]++;
  if (f[3][1] == 1)
    a[2][2]++, a[2][3]++, a[2][6]++, a[2][7]++, a[2][10]++, a[2][12]++,
        a[2][14]++, a[2][16]++;
  else
    a[2][1]++, a[2][4]++, a[2][5]++, a[2][8]++, a[2][9]++, a[2][11]++,
        a[2][13]++, a[2][15]++;
  if (f[3][2] == 1)
    a[2][1]++, a[2][4]++, a[2][5]++, a[2][8]++, a[2][10]++, a[2][12]++,
        a[2][14]++, a[2][16]++;
  else
    a[2][2]++, a[2][3]++, a[2][6]++, a[2][7]++, a[2][9]++, a[2][11]++,
        a[2][13]++, a[2][15]++;
  for (int i = 3; i <= y; i++) {
    a[i][1] = min(a[i - 1][2], a[i - 1][9]);
    a[i][2] = min(a[i - 1][1], a[i - 1][14]);
    a[i][3] = min(a[i - 1][4], a[i - 1][10]);
    a[i][4] = min(a[i - 1][3], a[i - 1][13]);
    a[i][5] = min(a[i - 1][11], a[i - 1][6]);
    a[i][6] = min(a[i - 1][5], a[i - 1][16]);
    a[i][7] = min(a[i - 1][12], a[i - 1][8]);
    a[i][8] = min(a[i - 1][15], a[i - 1][7]);
    a[i][9] = min(a[i - 1][6], a[i - 1][11]);
    a[i][10] = min(a[i - 1][8], a[i - 1][12]);
    a[i][11] = min(a[i - 1][2], a[i - 1][9]);
    a[i][12] = min(a[i - 1][4], a[i - 1][10]);
    a[i][13] = min(a[i - 1][15], a[i - 1][7]);
    a[i][14] = min(a[i - 1][5], a[i - 1][16]);
    a[i][15] = min(a[i - 1][3], a[i - 1][13]);
    a[i][16] = min(a[i - 1][1], a[i - 1][14]);
    if (f[1][i] == 0)
      a[i][2]++, a[i][4]++, a[i][6]++, a[i][8]++, a[i][9]++, a[i][10]++,
          a[i][11]++, a[i][12]++;
    else
      a[i][1]++, a[i][3]++, a[i][5]++, a[i][7]++, a[i][13]++, a[i][14]++,
          a[i][15]++, a[i][16]++;
    if (f[2][i] == 0)
      a[i][5]++, a[i][6]++, a[i][7]++, a[i][8]++, a[i][11]++, a[i][12]++,
          a[i][15]++, a[i][16]++;
    else
      a[i][1]++, a[i][2]++, a[i][3]++, a[i][4]++, a[i][9]++, a[i][10]++,
          a[i][13]++, a[i][14]++;
    if (f[3][i] == 0)
      a[i][2]++, a[i][3]++, a[i][6]++, a[i][7]++, a[i][9]++, a[i][11]++,
          a[i][13]++, a[i][15]++;
    else
      a[i][1]++, a[i][4]++, a[i][5]++, a[i][8]++, a[i][10]++, a[i][12]++,
          a[i][14]++, a[i][16]++;
  }
  mi = 0xffffff;
  for (int i = 1; i <= 16; i++) mi = min(mi, a[y][i]);
  printf("%d\n", mi);
}
int main() {
  scanf("%d%d", &n, &m);
  if (n > 3 && m > 3) {
    for (int i = 1; i <= n; i++) scanf("%s", &s);
    printf("-1\n");
    return 0;
  }
  if (min(n, m) == 1) {
    printf("0\n");
    return 0;
  }
  if (n == 2) {
    for (int i = 1; i <= n; i++) {
      scanf("%s", &s);
      for (int j = 0; j < m; j++) f[i][j + 1] = s[j] - '0';
    }
    work(m);
    return 0;
  }
  if (m == 2) {
    for (int i = 1; i <= n; i++) {
      scanf("%s", &s);
      for (int j = 0; j < m; j++) f[j + 1][i] = s[j] - '0';
    }
    work(n);
    return 0;
  }
  if (n == 3) {
    for (int i = 1; i <= n; i++) {
      scanf("%s", &s);
      for (int j = 0; j < m; j++) f[i][j + 1] = s[j] - '0';
    }
    work1(m);
    return 0;
  }
  if (m == 3) {
    for (int i = 1; i <= n; i++) {
      scanf("%s", &s);
      for (int j = 0; j < m; j++) f[j + 1][i] = s[j] - '0';
    }
    work1(n);
    return 0;
  }
}
