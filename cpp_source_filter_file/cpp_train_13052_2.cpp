#include <bits/stdc++.h>
using namespace std;
int G[1050], F[1050][1050][4];
long long P[1050], C[1050][1050];
int Rand() { return (rand() << 15) | rand(); }
int main() {
  int n, m, i, j;
  srand((unsigned)time(0));
  scanf("%d%d", &n, &m);
  if (n == 1) {
    printf("%d\n", (m == 0));
    return 0;
  }
  F[1][0][0] = 1;
  F[1][1][1] = 1;
  for (i = 1; i < n; i++) {
    for (j = 0; j <= i; j++) {
      F[i + 1][j][0] += (F[i][j][0] + F[i][j][2]) % 1000000007;
      F[i + 1][j][0] %= 1000000007;
      F[i + 1][j][2] += (F[i][j][1] + F[i][j][3]) % 1000000007;
      F[i + 1][j][2] %= 1000000007;
      F[i + 1][j + 1][0] += F[i][j][0];
      F[i + 1][j + 1][0] %= 1000000007;
      F[i + 1][j + 1][2] += F[i][j][1];
      F[i + 1][j + 1][2] %= 1000000007;
      if (i < n - 1) {
        F[i + 1][j + 1][1] += (F[i][j][0] + F[i][j][2]) % 1000000007;
        F[i + 1][j + 1][1] %= 1000000007;
        F[i + 1][j + 1][3] += (F[i][j][1] + F[i][j][3]) % 1000000007;
        F[i + 1][j + 1][3] %= 1000000007;
      }
    }
  }
  for (i = 1; i <= n; i++) {
    C[i][0] = C[i][i] = 1;
    C[i][1] = i;
  }
  for (i = 3; i <= n; i++) {
    for (j = 2; j < n; j++) {
      C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % 1000000007;
    }
  }
  P[0] = 1;
  for (i = 1; i <= n; i++) {
    P[i] = P[i - 1] * i % 1000000007;
  }
  for (i = 1; i <= n; i++) {
    for (j = 0; j < 4; j++) {
      G[i] += P[n - i] * F[n][i][j] % 1000000007;
      G[i] %= 1000000007;
    }
  }
  for (i = n - 1; i >= 1; i--) {
    for (j = i + 1; j <= n; j++) {
      G[i] -= C[j][i] * G[j] % 1000000007;
      G[i] = (G[i] % 1000000007 + 1000000007) % 1000000007;
    }
  }
  printf("%d\n", G[m]);
  return 0;
}
