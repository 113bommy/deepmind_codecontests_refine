def has_child(data, n):
    data_len = len(data) - 1  # [0]????????????????????§?????£?????????????????°???-1??????
    if data_len < n * 2:
        return 0
    else:
        if data_len >= (n * 2) + 1:
            return 2
        else:
            return 1


if __name__ == '__main__':
    # ??????????????\???
    num_of_data = int(input())
    data =  [int(x) for x in input().split(' ')]

    # ???????????????
    data.insert(0, None)  # ?????????????????????????????????[0]????????????????????\??????

    # ???????????????
    for i in range(1, num_of_data+1):
        print('node {0}: key = {1}, '.format(i, data[i]), end='')
        if i > 1:
            print('parent key = {0}, '.format(data[i//2]), end='')
        child = has_child(data, i)
        if child == 1:
            print('left key = {0}, '.format(data[i*2]), end='')
        if child == 2:
            print('left key = {0}, right key = {1}, '.format(data[i*2], data[i*2+1]), end='')
        print('')